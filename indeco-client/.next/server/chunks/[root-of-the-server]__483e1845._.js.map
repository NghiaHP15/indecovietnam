{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///D:/D%E1%BB%B1%20%C3%81n/indecovietnam/indeco-client/src/lib/axiosClient.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { Result } from \"@/constants/common\";\r\nimport axios, { AxiosError, AxiosRequestConfig } from \"axios\";\r\n\r\n// ======== Biến toàn cục ========\r\nlet isRefreshing = false;\r\nlet failedQueue: {\r\n    resolve: (token: string) => void;\r\n    reject: (error: AxiosError) => void;\r\n}[] = [];\r\n\r\n// ======== Hàm xử lý queue ========\r\nconst processQueue = (error: AxiosError | null, token: string | null = null) => {\r\n    failedQueue.forEach(prom => {\r\n        if (token) prom.resolve(token);\r\n        else prom.reject(error!);\r\n    });\r\n    failedQueue = [];\r\n};\r\n\r\n// ======== Hàm decode JWT ========\r\nconst parseJwt = (token: string): any => {\r\n    try {\r\n        return JSON.parse(atob(token.split(\".\")[1]));\r\n    } catch {\r\n        return null;\r\n    }\r\n};\r\n\r\n// ======== Hàm refresh token ========\r\nconst refreshAccessToken = async (): Promise<string | null> => {\r\n    try {\r\n        const response = await axios.post<Result<{ accessToken: string }>>(\r\n            `${process.env.NEXT_PUBLIC_API_URL}customer/refresh-token`,\r\n            {},\r\n            { withCredentials: true }\r\n        );\r\n        const newToken = response.data.data?.accessToken;\r\n        if (newToken) {\r\n            localStorage.setItem(\"accessToken\", newToken);\r\n            axiosClient.defaults.headers.Authorization = `Bearer ${newToken}`;\r\n        }\r\n        return newToken || null;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n};\r\n\r\n// ======== Axios instance ========\r\nconst axiosClient = axios.create({\r\n    baseURL: process.env.NEXT_PUBLIC_API_URL || \"http://localhost:5000/api\",\r\n    timeout: 50000,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    withCredentials: true,\r\n});\r\n\r\n// ======== Request Interceptor ========\r\naxiosClient.interceptors.request.use(\r\n    async (config) => {\r\n        const requiresAuth = (config as AxiosRequestConfig & { requiresAuth?: boolean }).requiresAuth;\r\n        if (!requiresAuth) return config;\r\n\r\n        const token = typeof window !== \"undefined\" ? localStorage.getItem(\"accessToken\") : null;\r\n        if (!token) return config;\r\n\r\n        // Check token expiration\r\n        const payload = parseJwt(token);\r\n        const now = Date.now() / 1000;\r\n        if (payload?.exp && now >= payload.exp - 60) { // refresh trước 60s\r\n            if (isRefreshing) {\r\n                // Nếu đang refresh, đợi token mới\r\n                const newToken = await new Promise<string>((resolve, reject) => {\r\n                    failedQueue.push({ resolve, reject });\r\n                });\r\n                config.headers.Authorization = `Bearer ${newToken}`;\r\n                return config;\r\n            }\r\n\r\n            isRefreshing = true;\r\n            const newToken = await refreshAccessToken();\r\n            isRefreshing = false;\r\n\r\n            if (newToken) {\r\n                processQueue(null, newToken);\r\n                config.headers.Authorization = `Bearer ${newToken}`;\r\n            } else {\r\n                processQueue(new AxiosError(\"Refresh token failed\"), null);\r\n            }\r\n        } else {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n\r\n        return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n);\r\n\r\n// ======== Response Interceptor (fallback khi vẫn bị 401) ========\r\naxiosClient.interceptors.response.use(\r\n    (response) => response,\r\n    async (error: AxiosError) => {\r\n        const originalRequest = error.config as AxiosRequestConfig & { _retry?: boolean };\r\n\r\n        if (error.response?.status === 401 && !originalRequest._retry) {\r\n            originalRequest._retry = true;\r\n\r\n            if (isRefreshing) {\r\n                return new Promise((resolve, reject) => {\r\n                    failedQueue.push({ resolve, reject });\r\n                }).then((token) => {\r\n                    if (originalRequest.headers) {\r\n                        originalRequest.headers.Authorization = `Bearer ${token}`;\r\n                    }\r\n                    return axiosClient(originalRequest);\r\n                });\r\n            }\r\n\r\n            isRefreshing = true;\r\n            const newToken = await refreshAccessToken();\r\n            isRefreshing = false;\r\n\r\n            if (newToken) {\r\n                processQueue(null, newToken);\r\n                if (originalRequest.headers) {\r\n                    originalRequest.headers.Authorization = `Bearer ${newToken}`;\r\n                }\r\n                return axiosClient(originalRequest);\r\n            } else {\r\n                processQueue(error, null);\r\n            }\r\n        }\r\n\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default axiosClient;\r\n"],"names":[],"mappings":"AAAA,oDAAoD,GACpD,qDAAqD;;;AAErD;;AAEA,kCAAkC;AAClC,IAAI,eAAe;AACnB,IAAI,cAGE,EAAE;AAER,oCAAoC;AACpC,MAAM,eAAe,CAAC,OAA0B,QAAuB,IAAI;IACvE,YAAY,OAAO,CAAC,CAAA;QAChB,IAAI,OAAO,KAAK,OAAO,CAAC;aACnB,KAAK,MAAM,CAAC;IACrB;IACA,cAAc,EAAE;AACpB;AAEA,mCAAmC;AACnC,MAAM,WAAW,CAAC;IACd,IAAI;QACA,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE;IAC9C,EAAE,OAAM;QACJ,OAAO;IACX;AACJ;AAEA,sCAAsC;AACtC,MAAM,qBAAqB;IACvB,IAAI;QACA,MAAM,WAAW,MAAM,uIAAA,CAAA,UAAK,CAAC,IAAI,CAC7B,uFAAmC,sBAAsB,CAAC,EAC1D,CAAC,GACD;YAAE,iBAAiB;QAAK;QAE5B,MAAM,WAAW,SAAS,IAAI,CAAC,IAAI,EAAE;QACrC,IAAI,UAAU;YACV,aAAa,OAAO,CAAC,eAAe;YACpC,YAAY,QAAQ,CAAC,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,UAAU;QACrE;QACA,OAAO,YAAY;IACvB,EAAE,OAAO,OAAO;QACZ,OAAO;IACX;AACJ;AAEA,mCAAmC;AACnC,MAAM,cAAc,uIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IAC7B,SAAS,uFAAmC;IAC5C,SAAS;IACT,SAAS;QAAE,gBAAgB;IAAmB;IAC9C,iBAAiB;AACrB;AAEA,wCAAwC;AACxC,YAAY,YAAY,CAAC,OAAO,CAAC,GAAG,CAChC,OAAO;IACH,MAAM,eAAe,AAAC,OAA2D,YAAY;IAC7F,IAAI,CAAC,cAAc,OAAO;IAE1B,MAAM,QAAQ,6EAAsE;IACpF,wCAAY,OAAO;;IAEnB,yBAAyB;IACzB,MAAM;IACN,MAAM;AA0BV,GACA,CAAC,QAAU,QAAQ,MAAM,CAAC;AAG9B,mEAAmE;AACnE,YAAY,YAAY,CAAC,QAAQ,CAAC,GAAG,CACjC,CAAC,WAAa,UACd,OAAO;IACH,MAAM,kBAAkB,MAAM,MAAM;IAEpC,IAAI,MAAM,QAAQ,EAAE,WAAW,OAAO,CAAC,gBAAgB,MAAM,EAAE;QAC3D,gBAAgB,MAAM,GAAG;QAEzB,IAAI,cAAc;YACd,OAAO,IAAI,QAAQ,CAAC,SAAS;gBACzB,YAAY,IAAI,CAAC;oBAAE;oBAAS;gBAAO;YACvC,GAAG,IAAI,CAAC,CAAC;gBACL,IAAI,gBAAgB,OAAO,EAAE;oBACzB,gBAAgB,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO;gBAC7D;gBACA,OAAO,YAAY;YACvB;QACJ;QAEA,eAAe;QACf,MAAM,WAAW,MAAM;QACvB,eAAe;QAEf,IAAI,UAAU;YACV,aAAa,MAAM;YACnB,IAAI,gBAAgB,OAAO,EAAE;gBACzB,gBAAgB,OAAO,CAAC,aAAa,GAAG,CAAC,OAAO,EAAE,UAAU;YAChE;YACA,OAAO,YAAY;QACvB,OAAO;YACH,aAAa,OAAO;QACxB;IACJ;IAEA,OAAO,QAAQ,MAAM,CAAC;AAC1B;uCAGW","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///D:/D%E1%BB%B1%20%C3%81n/indecovietnam/indeco-client/src/lib/APIClient.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { AxiosRequestConfig, AxiosError, AxiosResponse } from 'axios';\r\nimport axiosInstance from './axiosClient';\r\nimport { Result } from '@/constants/common';\r\n\r\nclass APIClient {\r\n  get<T = any>(config: AxiosRequestConfig): Promise<T> {\r\n    return this.request<T>({ ...config, method: 'GET' });\r\n  }\r\n\r\n  post<T = any>(config: AxiosRequestConfig): Promise<T> {\r\n    return this.request<T>({ ...config, method: 'POST' });\r\n  }\r\n\r\n  put<T = any>(config: AxiosRequestConfig): Promise<T> {\r\n    return this.request<T>({ ...config, method: 'PUT' });\r\n  }\r\n\r\n  delete<T = any>(config: AxiosRequestConfig): Promise<T> {\r\n    return this.request<T>({ ...config, method: 'DELETE' });\r\n  }\r\n\r\n  request<T = any>(config: AxiosRequestConfig): Promise<T> {\r\n    return new Promise((resolve, reject) => {\r\n      axiosInstance\r\n        .request<any, AxiosResponse<Result>>(config)\r\n        .then((res: AxiosResponse<Result>) => {\r\n          resolve(res as unknown as Promise<T>);\r\n        })\r\n        .catch((e: Error | AxiosError) => {\r\n          reject(e);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default new APIClient();"],"names":[],"mappings":"AAAA,qDAAqD;;;AAErD;;AAGA,MAAM;IACJ,IAAa,MAA0B,EAAc;QACnD,OAAO,IAAI,CAAC,OAAO,CAAI;YAAE,GAAG,MAAM;YAAE,QAAQ;QAAM;IACpD;IAEA,KAAc,MAA0B,EAAc;QACpD,OAAO,IAAI,CAAC,OAAO,CAAI;YAAE,GAAG,MAAM;YAAE,QAAQ;QAAO;IACrD;IAEA,IAAa,MAA0B,EAAc;QACnD,OAAO,IAAI,CAAC,OAAO,CAAI;YAAE,GAAG,MAAM;YAAE,QAAQ;QAAM;IACpD;IAEA,OAAgB,MAA0B,EAAc;QACtD,OAAO,IAAI,CAAC,OAAO,CAAI;YAAE,GAAG,MAAM;YAAE,QAAQ;QAAS;IACvD;IAEA,QAAiB,MAA0B,EAAc;QACvD,OAAO,IAAI,QAAQ,CAAC,SAAS;YAC3B,2HAAA,CAAA,UAAa,CACV,OAAO,CAA6B,QACpC,IAAI,CAAC,CAAC;gBACL,QAAQ;YACV,GACC,KAAK,CAAC,CAAC;gBACN,OAAO;YACT;QACJ;IACF;AACF;uCAIe,IAAI","debugId":null}},
    {"offset": {"line": 327, "column": 0}, "map": {"version":3,"sources":["file:///D:/D%E1%BB%B1%20%C3%81n/indecovietnam/indeco-client/src/services/authService.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport APIClient from \"@/lib/APIClient\";\r\n\r\nexport enum AuthApi {\r\n  login = \"/customer/login\",\r\n  loginSocail = \"/customer/login-social\",\r\n  logout = \"/customer/logout\",\r\n  register = \"/customer/register\",\r\n  forgotPassword = \"/customer/forgot-password\",\r\n  confirmOtp = \"/customer/confirm-otp\",\r\n  resetPassword = \"/customer/reset-password\",\r\n}\r\n\r\nconst login = async (data: any = {}) => await APIClient.post({ url: AuthApi.login, data })\r\nconst loginSocail = async (data: any = {}) => await APIClient.post({ url: AuthApi.loginSocail, data })\r\nconst logout = async () => await APIClient.post({ url: AuthApi.logout})\r\nconst register = async (data: any = \"\") => await APIClient.post({ url: AuthApi.register, data })\r\nconst forgotPassword = async (data: any = \"\") => await APIClient.post({ url: AuthApi.forgotPassword, data })\r\nconst confirmOtp = async (data: any = \"\") => await APIClient.post({ url: AuthApi.confirmOtp, data })\r\nconst resetPassword = async (data: any = \"\") => await APIClient.post({ url: AuthApi.resetPassword, data })\r\n\r\nexport { \r\n    login, \r\n    loginSocail,\r\n    logout, \r\n    register,\r\n    forgotPassword,\r\n    confirmOtp,\r\n    resetPassword\r\n}"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;;AACrD;;AAEO,IAAA,AAAK,iCAAA;;;;;;;;WAAA;;AAUZ,MAAM,QAAQ,OAAO,OAAY,CAAC,CAAC,GAAK,MAAM,yHAAA,CAAA,UAAS,CAAC,IAAI,CAAC;QAAE,GAAG;QAAiB;IAAK;AACxF,MAAM,cAAc,OAAO,OAAY,CAAC,CAAC,GAAK,MAAM,yHAAA,CAAA,UAAS,CAAC,IAAI,CAAC;QAAE,GAAG;QAAuB;IAAK;AACpG,MAAM,SAAS,UAAY,MAAM,yHAAA,CAAA,UAAS,CAAC,IAAI,CAAC;QAAE,GAAG;IAAgB;AACrE,MAAM,WAAW,OAAO,OAAY,EAAE,GAAK,MAAM,yHAAA,CAAA,UAAS,CAAC,IAAI,CAAC;QAAE,GAAG;QAAoB;IAAK;AAC9F,MAAM,iBAAiB,OAAO,OAAY,EAAE,GAAK,MAAM,yHAAA,CAAA,UAAS,CAAC,IAAI,CAAC;QAAE,GAAG;QAA0B;IAAK;AAC1G,MAAM,aAAa,OAAO,OAAY,EAAE,GAAK,MAAM,yHAAA,CAAA,UAAS,CAAC,IAAI,CAAC;QAAE,GAAG;QAAsB;IAAK;AAClG,MAAM,gBAAgB,OAAO,OAAY,EAAE,GAAK,MAAM,yHAAA,CAAA,UAAS,CAAC,IAAI,CAAC;QAAE,GAAG;QAAyB;IAAK","debugId":null}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":["file:///D:/D%E1%BB%B1%20%C3%81n/indecovietnam/indeco-client/src/app/api/auth/%5B...nextauth%5D/route.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport NextAuth from \"next-auth\";\r\nimport GoogleProvider from \"next-auth/providers/google\";\r\nimport FacebookProvider from \"next-auth/providers/facebook\";\r\nimport { loginSocail } from \"@/services/authService\";\r\n\r\nconst handler = NextAuth({\r\n  providers: [\r\n    GoogleProvider({\r\n      clientId: process.env.GOOGLE_CLIENT_ID!,\r\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\r\n    }),\r\n    FacebookProvider({\r\n      clientId: process.env.FACEBOOK_CLIENT_ID!,\r\n      clientSecret: process.env.FACEBOOK_CLIENT_SECRET!,\r\n    }),\r\n  ],\r\n  callbacks: {\r\n    async signIn({ user, account }) {\r\n      // Gửi thông tin user về backend để lưu\r\n      const nameParts = user.name?.split(\" \") || [];\r\n      const firstname = nameParts[0] || \"\";\r\n      const lastname = nameParts[1] || \"\";\r\n      \r\n      const res = await loginSocail({\r\n        firstname,\r\n        lastname,\r\n        email: user.email,\r\n        avatar: user.image,\r\n        provider: account?.provider,\r\n        provider_id: account?.providerAccountId,\r\n      });\r\n      if (res?.data?.success) {\r\n        // ✅ ép kiểu user và account để thêm custom fields\r\n        (user as any).customUser = res.data.data.user;\r\n        (account as any).customAccessToken = res.data.data.accessToken;\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    async jwt({ token, user, account }) {\r\n      if (user) {\r\n        // ✅ Lấy custom user từ user (chỉ có ở lần đầu login)\r\n        token.user = (user as any).customUser ?? token.user;\r\n      }\r\n      if (account) {\r\n        token.accessToken = (account as any).customAccessToken ?? token.accessToken;\r\n      }\r\n      return token;\r\n    },\r\n\r\n    async session({ session, token }) {\r\n      session.user = token.user;\r\n      (session as any).accessToken = token.accessToken;\r\n      return session;\r\n    },\r\n  },\r\n});\r\n\r\nexport { handler as GET, handler as POST };\r\n"],"names":[],"mappings":"AAAA,qDAAqD;;;;AACrD;AACA;AACA;AACA;;;;;AAEA,MAAM,UAAU,CAAA,GAAA,uIAAA,CAAA,UAAQ,AAAD,EAAE;IACvB,WAAW;QACT,CAAA,GAAA,qJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;QAChD;QACA,CAAA,GAAA,uJAAA,CAAA,UAAgB,AAAD,EAAE;YACf,UAAU,QAAQ,GAAG,CAAC,kBAAkB;YACxC,cAAc,QAAQ,GAAG,CAAC,sBAAsB;QAClD;KACD;IACD,WAAW;QACT,MAAM,QAAO,EAAE,IAAI,EAAE,OAAO,EAAE;YAC5B,uCAAuC;YACvC,MAAM,YAAY,KAAK,IAAI,EAAE,MAAM,QAAQ,EAAE;YAC7C,MAAM,YAAY,SAAS,CAAC,EAAE,IAAI;YAClC,MAAM,WAAW,SAAS,CAAC,EAAE,IAAI;YAEjC,MAAM,MAAM,MAAM,CAAA,GAAA,gIAAA,CAAA,cAAW,AAAD,EAAE;gBAC5B;gBACA;gBACA,OAAO,KAAK,KAAK;gBACjB,QAAQ,KAAK,KAAK;gBAClB,UAAU,SAAS;gBACnB,aAAa,SAAS;YACxB;YACA,IAAI,KAAK,MAAM,SAAS;gBACtB,kDAAkD;gBACjD,KAAa,UAAU,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI;gBAC5C,QAAgB,iBAAiB,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW;gBAC9D,OAAO;YACT;YACA,OAAO;QACT;QACA,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE;YAChC,IAAI,MAAM;gBACR,qDAAqD;gBACrD,MAAM,IAAI,GAAG,AAAC,KAAa,UAAU,IAAI,MAAM,IAAI;YACrD;YACA,IAAI,SAAS;gBACX,MAAM,WAAW,GAAG,AAAC,QAAgB,iBAAiB,IAAI,MAAM,WAAW;YAC7E;YACA,OAAO;QACT;QAEA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,QAAQ,IAAI,GAAG,MAAM,IAAI;YACxB,QAAgB,WAAW,GAAG,MAAM,WAAW;YAChD,OAAO;QACT;IACF;AACF","debugId":null}}]
}